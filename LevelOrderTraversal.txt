/*Given a binary tree, find its level order traversal.
Level order traversal of a tree is breadth-first traversal for the tree.

Example 1:

Input:
    1
  /   \ 
 3     2
Output:1 3 2

Example 2:

Input:
        10
     /      \
    20       30
  /   \
 40   60
Output:10 20 30 40 60 N N
*/

/* A binary tree Node

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
 */


class Solution
{
    public:
    //Function to return the level order traversal of a tree.
    vector<int> levelOrder(Node* node)
    {
      //Your code here
      vector<int> ans;
      queue<Node*> q;
      if(!node) return ans;
      q.push(node);
      while(!q.empty()){
          Node* t=q.front();
          ans.push_back(t->data);
          if(t->left) q.push(t->left);
          if(t->right) q.push(t->right);
          q.pop();
        }
        return ans;
    }
    
};